using Xunit;
using SimpleBank;

namespace Generate.UnitTests
{
    public class GenerateService_Test
    {
        [Fact]
        public void ReturnInt1()
        {
            var generateService = new Generator();
            int result = generateService.GenerateCheckDigit(new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 1, 2, 3, 4, 5, 6 });

            Assert.Equal(7, result);
        }

        [Fact]
        public void ReturnInt2()
        {
            var generateService = new Generator();
            int result = generateService.GenerateCheckDigit(new int[] { 6, 2, 1, 0, 4, 8, 1, 8, 8, 3, 2, 4, 1, 6, 9, 4 });

            Assert.Equal(5, result);
        }

        [Fact]
        public void ReturnInt3()
        {
            var generateService = new Generator();
            int result = generateService.GenerateCheckDigit(new int[] { 4, 6, 1, 7, 3, 9, 3, 3, 6, 7, 2, 4, 2, 7, 5, 9 });

            Assert.Equal(4, result);
        }

        [Fact]
        public void ReturnInt4()
        {
            var generateService = new Generator();
            int result = generateService.GenerateCheckDigit(new int[] { 1, 1, 1, 2, 6, 6, 1, 9, 0, 1, 7, 0, 5, 5, 3, 4 });

            Assert.Equal(7, result);
        }
    }
}
